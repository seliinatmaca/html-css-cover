article {
  border: 2px solid;

  /* margin > dışarıya olan boşluk */
  margin: 30px;

  /* padding > içeriye olan boşluk */
  padding: 30px;
}

section {
  /* tek değer 4 köşeyi etkiler */
  border: 4px solid red;

  /* 4 değer saat yönünde 4 köşeyi etkiler */
  margin: 10px 20px 30px 40px;
  /* 2 değer > ilk ikisi y ekseni diğeri x eksinin etkiler */
  padding: 20px 40px;
}

section p {
  /* 3 değer > 1. üst köşe > 2. x ekseini > 3.alt köşe */
  padding: 20px 30px 40px;
}

body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 400;
  font-size: 14px;
}
section > p {
  /* yazıyı hizalar */
  text-align: center;
  text-align: end;
  text-align: start;
  text-align: center;

  /* yazı desini */
  text-decoration: line-through;
  text-decoration: overline;
  text-decoration: underline;

  /* yazı boyutunu */
  text-transform: uppercase;
  text-transform: lowercase;
  text-transform: capitalize;
}
/* nth-child > belirli sıradki çocuk elemen */
/* nth-child:sözde seçici */

section p:nth-child(1) {
  background: rgb(33, 0, 200);
}

section p:nth-child(2) {
  background: green;
}
section p:nth-child(3) {
  background: pink;
}

/* Display */
/* display özelliği, CSS'te bir öğenin nasıl yerleştirileceğini ve diğer öğelerle nasıl etkileşime gireceğini belirleyen en temel özelliklerden biridir. Bu özellik, bir öğenin görünümünü ve yerleşimini kontrol eder .display: flex;, CSS'de bir öğeyi esnek bir kapsayıcı (flex container) haline getirir ve içinde yer alan öğeleri (flex items) esnek bir şekilde hizalama ve yerleştirme imkanı sağlar.*/
.parent {
  margin: 20px 40px;
  display: flex;
  /* flexin yönünü belirleme dikey alt alta geliyor*/
  /* flex-direction: column; */
  height: 300px;
  border: 3px solid red;
  padding: 10px;
}

.parent div {
  padding: 5px;
  border: 2px solid black;
}

.p1 {
  justify-content: start;
}

.p2 {
  /* yatayda ortalar */
  justify-content: center;
}
.p3 {
  justify-content: end;
}

.p4 {
  /* başlangıç vermiyor elemanların arasına olabildiğince boşluk ırakıyoruz */
  justify-content: space-between;
}

.p5 {
  /* köşeler 2k ortaya iç 1k boşluk */
  justify-content: space-evenly;
}
.p6 {
  /* her yere eşit boşluk */
  justify-content: space-around;
}
/* git flex-direction:column yap */

.p8 {
  /* ana eksen x ekseni */
  justify-content: center;
  /* ana eksenşn tersine y ekseni */
  align-items: center;
}

.p9 {
  /* ana eksen x ekseni */
  justify-content: center;
  /* ana eksenşn tersine y ekseni */
  align-items: start;
}
.p10 {
  /* ana eksen x ekseni */
  justify-content: center;
  /* ana eksenşn tersine y ekseni */
  align-items: end;
}
.p12 {
  flex-direction: column;
  /* flex-direction: column-reverse; */
  /* flex-direction: row;
  flex-direction: row-reverse; */
  height: 200px;
}

.p12 > div:nth-child(1) {
  flex-grow: 2;
}

.p12 > div:nth-child(2) {
  flex-grow: 3;
}

.p12 > div:nth-child(3) {
  flex-grow: 1;
}

.p13 {
  /* çocuk elemanı alt satıra geçme yetkisi */
  /* flex-wrap: nowrap; */
  flex-wrap: wrap;
}

/* çocuk elemanların sırası üzerinde oynama */
.p13 > div:nth-child(8) {
  background: red;
  order: 1;
}

.p13 > div:nth-child(3) {
  background: rgb(123, 255, 0);
  order: 3;
}

.p14 div {
  width: 100%;
}

.p14 > div:nth-child(1) {
  flex-shrink: 2;
}

.p14 > div:nth-child(2) {
  flex-shrink: 4;
}
